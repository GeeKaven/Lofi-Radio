{"version":3,"sources":["../../src/controllers/musicCtrl.js"],"names":[],"mappings":"yhBAAA,wB;AACA,4B;AACA,2C;;AAEA,IAAM,SAAS,QAAQ,eAAR,CAAf;;AAEA,IAAM,WAAW,eAAK,IAAL,CAAU,SAAV,EAAqB,oBAArB,CAAjB,C;;AAEe;AACX,uGAAiB,iBAAO,GAAP,EAAY,IAAZ,wLAAjB,oFADW;;;;AAKX,mGAAW,kBAAO,GAAP,EAAY,IAAZ;;AAEC,+BAFD,GAEO,EAFP;AAGM,oDAHN;AAIiB,uEAAI,WAAJ,CAAgB,KAAK,IAAL,CAAhB,CAJjB,UAIK,GAJL;AAKK,uDALL,GAKe,KAAK,KAAL,CAAW,IAAI,IAAf,CALf;AAMK,wDANL,GAMgB,QAAQ,UAAR,EAAoB,UAApB,CANhB;AAOK,oDAPL,GAOY,EAPZ;AAQC,yDAAS,OAAT,CAAiB,iBAAU,KAAR,EAAQ,SAAR,EAAQ;AACvB,yDAAK,IAAL,CAAU,EAAV;AACH,iDAFD;AAGI,wDAXL,GAWgB,eAAK,IAAL,CAAU,QAAV,EAAoB,KAAK,MAAL,IAAe,OAAnC,CAXhB;AAYC,6DAAG,aAAH,CAAiB,QAAjB,EAA2B,yBAAe,IAAf,CAA3B;AACA,oDAAI,IAAJ,CAAS,IAAT,EAbD,iFAGc,OAAO,QAHrB;;AAeH,yCAAG,aAAH,CAAiB,eAAK,IAAL,CAAU,QAAV,EAAoB,UAApB,CAAjB,EAAkD,yBAAe,GAAf,CAAlD;AACA,gCAAI,IAAJ,GAAW,yBAAe,GAAf,CAAX,CAhBG;;AAkBH,oCAAQ,GAAR;AACA,gCAAI,IAAJ,GAAW,IAAX,CAnBG,iFAAX,iFALW;;;;AA4BX,kGAAU,kBAAO,GAAP,EAAY,IAAZ;AACA,iCADA,GACQ,IAAI,KADZ;AAEa,mDAAI,SAAJ,CAAc,MAAM,QAAN,CAAd,CAFb,SAEF,MAFE;AAGN,oCAAQ,GAAR,CAAY,OAAO,IAAnB,EAHM,qEAAV,gFA5BW;;;AAkCX,qGAAa,kBAAO,GAAP,EAAY,IAAZ;AACF,iCADE,GACM,IAAI,KADV;AAEY,mDAAI,WAAJ,CAAgB,MAAM,UAAN,CAAhB,CAFZ,SAEL,QAFK;AAGT,gCAAI,IAAJ,GAAW,SAAS,IAApB,CAHS,qEAAb,mFAlCW,E","file":"musicCtrl.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport api from '../api/cloudApi'\n\nconst config = require('../../fm.json')\n\nconst listPath = path.join(__dirname, \"../../public/music\")\n\nexport default {\n    getRandomMusic : async (ctx, next) => {\n        \n    },\n\n    buildList: async (ctx, next) => {\n        try {\n            let all = []\n            for (let item of config.playList) {\n                let res = await api.getPlayList(item[\"id\"])\n                let resJSON = JSON.parse(res.text);\n                let trackIds = resJSON['playlist']['trackIds'];\n                let list = []\n                trackIds.forEach(({id}) => {\n                    list.push(id)\n                })\n                let filePath = path.join(listPath, item[\"type\"] + \".json\")\n                fs.writeFileSync(filePath, JSON.stringify(list))\n                all.push(list)\n            }\n            fs.writeFileSync(path.join(listPath, \"all.json\"), JSON.stringify(all))\n            ctx.body = JSON.stringify(all)\n        } catch (err) {\n            console.log(err)\n            ctx.body = null\n        }\n    },\n\n    getMusic: async (ctx, next) => {\n        const query = ctx.query\n        let detail = await api.getDetail(query['songId'])\n        console.log(detail.text)\n    },\n\n    getPlayList: async (ctx, next) => {\n        const  query = ctx.query\n        let playList = await api.getPlayList(query['playList'])\n        ctx.body = playList.text;\n    }\n}"]}