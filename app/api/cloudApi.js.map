{"version":3,"sources":["../../src/api/cloudApi.js"],"names":["crypto","require","request","bigInt","MODULE","NONCE","PUBKEY","VI","COOKIE","header","fetch","url","data","resolve","reject","post","send","set","timeout","end","error","res","addPadding","encText","modulus","ml","length","i","num","prefix","buildSecretKey","keys","key","pos","Math","floor","random","charAt","encodeQueryData","params","hasOwnProperty","value","push","encodeURIComponent","join","encrypt","raw","secretKey","aesEncrypt","rsaEncrypt","secKey","cipher","createCipheriv","update","final","rText","radix","biText","Buffer","toString","biEx","biMod","biRet","modPow","CloudMusicAPI","getDetail","songId","getPlayList","playListId","getArtist","artistId","$artist_id","getAlbum","albumId","$album_id","getUrl","br","getLyric","getMv","mvId","search","limit","offset","type","module","exports"],"mappings":"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","file":"cloudApi.js","sourcesContent":["const crypto = require('crypto')\nconst request = require('superagent')\nconst bigInt = require('big-integer')\n\nconst MODULE = '00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7'\nconst NONCE = '0CoJUm6Qyw8W8jud'\nconst PUBKEY = '010001'\nconst VI = '0102030405060708'\nconst COOKIE = 'os=pc; osver=Microsoft-Windows-10-Professional-build-10586-64bit; appver=2.0.3.131777; channel=netease; __remember_me=true'\n\nconst header = {\n    'Accept': '*/*',\n    'Accept-Encoding': 'gzip,deflate,sdch',\n    'Accept-Language': 'zh-CN,en-US;q=0.7,en;q=0.3',\n    'Connection': 'keep-alive',\n    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n    'Host': 'music.163.com',\n    'Referer': 'http://music.163.com/',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.157 Safari/537.36'\n}\n\nfunction fetch(url, data) {\n\n    return new Promise((resolve, reject) => {\n        request\n            .post(url)\n            .send(data)\n            .set('Cookie', COOKIE)\n            .set(header)\n            .timeout(5000)\n            .end((error, res) => {\n                error ? reject(error) : resolve(res);\n            })\n    })\n}\n\nfunction addPadding(encText, modulus) {\n    let ml = modulus.length;\n    for (let i = 0; ml > 0 && modulus[i] == '0'; i++)ml--;\n    let num = ml - encText.length, prefix = '';\n    for (let i = 0; i < num; i++) {\n        prefix += '0';\n    }\n    return prefix + encText;\n}\n\nfunction buildSecretKey(length) {\n    let keys = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    let key = ''\n    for (let i = 0; i < length; i++) {\n        let pos = Math.floor(Math.random() * keys.length);\n        key += keys.charAt(pos)\n    }\n\n    return key\n}\n\nfunction encodeQueryData(data) {\n    let params = []\n    for (let key in data) {\n        if (data.hasOwnProperty(key)) {\n            let value = data[key];\n            params.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(value))\n        }\n    }\n    return params.join('&')\n}\n\nfunction encrypt(raw) {\n    let secretKey = buildSecretKey(16)\n    let data = {\n        'params' : aesEncrypt(aesEncrypt(JSON.stringify(raw), NONCE), secretKey),\n        'encSecKey' : rsaEncrypt(secretKey)\n    };\n    return data;\n}\n\nfunction aesEncrypt(data, secKey) {\n    let cipher = crypto.createCipheriv('aes-128-cbc', secKey, VI)\n    return cipher.update(data, 'utf-8', 'base64') + cipher.final('base64')\n}\n\nfunction rsaEncrypt(secKey) {\n    let rText = '',\n        radix = 16;\n    for (let i = secKey.length - 1; i >= 0; i--) {\n        rText += secKey[i];\n    }\n    let biText = bigInt(new Buffer(rText).toString('hex'), radix),\n        biEx = bigInt(PUBKEY, radix),\n        biMod = bigInt(MODULE, radix),\n        biRet = biText.modPow(biEx, biMod);\n    return addPadding(biRet.toString(radix), MODULE);\n}\n\nlet CloudMusicAPI = {\n    getDetail : function(songId) {\n        let url = \"http://music.163.com/weapi/v3/song/detail?csrf_token=\"\n        let data = {\n            'c' : JSON.stringify({'id':songId}),\n            'csrf_token' : ''\n        }\n        return fetch(url, encrypt(data))\n    },\n\n    getPlayList : function(playListId) {\n        let url = \"http://music.163.com/weapi/v3/playlist/detail?csrf_token=\"\n        let data = {\n            'id' : playListId,\n            'n' : 1000,\n            'csrf_token' : ''\n        }\n        return fetch(url, encrypt(data))\n    },\n\n    getArtist : function(artistId) {\n        let url = 'http://music.163.com/weapi/v1/artist/' + $artist_id + '?csrf_token='\n        let data = {\n            'csrf_token' : ''\n        }\n        return fetch(url, encrypt(data))\n    },\n\n    getAlbum : function(albumId) {\n        let url = 'http://music.163.com/weapi/v1/album/' + $album_id + '?csrf_token=';\n        let data = {\n            'csrf_token' : ''\n        }\n        return fetch(url, encrypt(data))\n    },\n\n    getUrl : function(songId, br = 999000) {\n        let url = 'http://music.163.com/weapi/song/enhance/player/url?csrf_token='\n        let data = {\n            'ids' : songId,\n            'br' : br,\n            'csrf_token' : ''\n        }\n        return fetch(url, encrypt(data))\n    },\n\n    getLyric : function(songId) {\n        let url = 'http://music.163.com/weapi/song/lyric?csrf_token='\n        let data = {\n            'id' : songId,\n            'os' : 'pc',\n            'lv' : -1,\n            'kv' : -1,\n            'tv' : -1,\n            'csrf_token' : ''\n        }\n        return fetch(url, encrypt(data))\n    },\n\n    getMv : function(mvId) {\n        let url = 'http://music.163.com/weapi/mv/detail?csrf_token='\n        let data = {\n            'id' : mvId,\n            'csrf_token' : '',\n        }\n        return fetch(url, encrypt(data))\n    },\n\n    search : function(search, limit=30, offset=0, type=1) {\n        let url = 'http://music.163.com/weapi/cloudsearch/get/web?csrf_token='\n        let data = {\n            's' : search,\n            'type' : type,\n            'limit' : limit,\n            'total' : 'true',\n            'offset' : offset,\n            'csrf_token' : ''\n        }\n        return fetch(url, encrypt(data))\n    }\n}\n\nmodule.exports = CloudMusicAPI\n"]}